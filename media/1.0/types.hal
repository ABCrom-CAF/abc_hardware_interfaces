/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.media@1.0;

import android.hardware.graphics.common@1.0::PixelFormat;

/**
 * Aliases
 */
typedef handle FileDescriptor; // This must have no more than one fd.
typedef FileDescriptor Fence;
typedef vec<uint8_t> Bytes;

/**
 * Ref: frameworks/native/include/ui/GraphicBuffer.h
 * Ref: system/core/include/system/window.h: ANativeWindowBuffer
 */

/**
 * This struct contains attributes for a gralloc buffer that can be put into a
 * union.
 */
struct AnwBufferAttributes {
    uint32_t width;
    uint32_t height;
    uint32_t stride;
    PixelFormat format;
    uint32_t usage; // TODO: convert to an enum
    uint64_t layerCount;
};

/**
 * An AnwBuffer is simply AnwBufferAttributes plus a native handle.
 */
struct AnwBuffer {
    handle nativeHandle;
    AnwBufferAttributes attr;
};

/**
 * Ref: frameworks/native/include/binder/IMemory.h
 * Ref: frameworks/native/libs/binder/IMemory.cpp
 */

/**
 * This struct contains attributes for a shared memory buffer that can be put
 * into a union.
 */
struct SharedMemoryAttributes {
    uint32_t size;
    uint32_t flags; // TODO: convert to an enum
    uint32_t offset;
};

/**
 * A SharedMemory is simply SharedMemoryAttributes plus a native handle.
 */
struct SharedMemory {
    handle nativeHandle;
    SharedMemoryAttributes attr;
};

